<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.jboss.tools</groupId>
	<artifactId>parent</artifactId>
		<version>4.5.1.Final-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>JBoss Tools and Red Hat JBoss Developer Studio Parent</name>
	<description>JBoss Tools and Red Hat JBoss Developer Studio Parent</description>
	<url>https://developers.redhat.com/products/devstudio/overview/</url>

	<properties>
		<!-- ==================================================== -->
		<!-- Build properties, to be updated with every milestone or new Eclipse release -->
		<!-- ==================================================== -->
		<BUILD_ALIAS>Final</BUILD_ALIAS>
		<targetEclipseVersion>4.7.1 (Oxygen)</targetEclipseVersion>
		<eclipseReleaseName>oxygen</eclipseReleaseName>
		<devstudioReleaseVersion>11</devstudioReleaseVersion>
		<!-- Integration Test (ITest) parameters -->
		<testProduct>com.jboss.devstudio.core.product</testProduct>
		<devstudioRepository>https://devstudio.redhat.com/11/snapshots/updates/</devstudioRepository>
		<!-- baseline check URLs -->
		<lastStableRepository>http://download.jboss.org/jbosstools/oxygen/stable/updates/</lastStableRepository>
		<!-- JBIDE-22689 to skip this check, use -Dtycho.baseline=disable, NOT -DskipBaselineComparison=true -->
		<stagingBaselineRepository>http://download.jboss.org/jbosstools/oxygen/staging/updates/</stagingBaselineRepository>

		<!-- if https://issues.jboss.org/browse/JBIDE-22248 comes back, use <jbossNexus>origin-repository.jboss.org</jbossNexus> -->
		<jbossNexus>origin-repository.jboss.org</jbossNexus>
		<!-- https://issues.jboss.org/browse/JBIDE-23965 performance tuning for filemgmt.jboss.org - use IP as it's 3x faster (but subject to change) -->
		<filemgmtJbossOrg>10.5.105.197</filemgmtJbossOrg>

		<!-- ==================================================== -->
		<!-- General properties, not meant to be tweaked by users -->
		<!-- ==================================================== -->
		<tychoVersion>1.0.0</tychoVersion>
		<tychoExtrasVersion>${tychoVersion}</tychoExtrasVersion>
		<jbossTychoPluginsVersion>1.0.0</jbossTychoPluginsVersion>
		<jbosstoolsRelengPublishVersion>4.5.1.Final</jbosstoolsRelengPublishVersion>
		<memoryOptions1>-Xms512m -Xmx1024m -XX:MetaspaceSize=256m</memoryOptions1>
		<memoryOptions2></memoryOptions2>
		<systemProperties></systemProperties>
		<platformSystemProperties></platformSystemProperties>
		<applejdkProperties></applejdkProperties>
		<maven.antrun.plugin.version>1.3</maven.antrun.plugin.version>
		<!-- Default coverage filter, to be overriden when necessary -->
		<coverage.filter>org.jboss.tools.*</coverage.filter>
		<update.site.name>JBoss Tools - ${project.artifactId}</update.site.name>
		<!-- In the update site's site/pom.xml (that calls jbosstools-maven-plugins/tycho-plugins/repository-utils)
				 you can override this value to be Nightly Build, Development Milestone, or Stable Release, or set to &amp;shy; (soft hyphen) to leave blank -->
		<update.site.description>&amp;shy;</update.site.description>
		<BUILD_TIMESTAMP>${maven.build.timestamp}</BUILD_TIMESTAMP>
		<maven.build.timestamp.format>yyyy-MM-dd_HH-mm-ss</maven.build.timestamp.format>

		<!-- ===================================================== -->
		<!-- SWITCHES can be overriden by command-line -Dkey=value -->
		<!-- ===================================================== -->
		<!-- by default, don't run the deploy-to-jboss.org profile for all poms; set this to false in site/pom.xml -->
		<skipDeployToJBossOrg>true</skipDeployToJBossOrg>
		<swtbot.test.skip>true</swtbot.test.skip>
		<!-- Used to install 3rd-party runtimes for testing -->
		<skipRequirements>${skipTests}</skipRequirements>
		<!-- Skip downloading private stuff, to be propagated to tests to skip executing test based on private stuff -->
		<!-- See JBIDE-12420 -->
		<skipPrivateRequirements>true</skipPrivateRequirements>
		<skipSigning>true</skipSigning>
		<skipBaselineComparison>false</skipBaselineComparison>
		<requirementsDirectory>${project.build.directory}/requirements</requirementsDirectory>
		<skipTestsWithPrivateRequirements>${skipPrivateRequirements}</skipTestsWithPrivateRequirements>
		<!-- if you have integration tests, you can skip them using this -->
		<skipITests>true</skipITests>
		<!-- Unit Test and Integration Test timeouts in seconds -->
		<surefire.timeout>2400</surefire.timeout>
		<surefire.itests.timeout>${surefire.timeout}</surefire.itests.timeout>
		<!-- Where to put jacoco coverage report, basically in the target/ folder at the top-level for each component -->
		<!-- For multi-modules "chunks", set it to '../../../target/jacoco.exec' in their root pom -->
		<jacoco.destFile>../../target/jacoco.exec</jacoco.destFile>
		<!-- Default properties for Java runtimes to be used and set during testing, eg., /qa/tools/opt/jdk1.8.0_last/ or /opt/jdk1.7.0_17/
				 These properties will be set when running in Jenkins, but you can set them in your settings.xml too.
				 Not recommended that you set default values in your root or test poms as they are machine specific. -->
		<jbosstools.test.jre.5>${JAVA_HOME}</jbosstools.test.jre.5>
		<jbosstools.test.jre.6>${JAVA_HOME}</jbosstools.test.jre.6>
		<jbosstools.test.jre.7>${JAVA_HOME}</jbosstools.test.jre.7>
		<jbosstools.test.jre.8>${JAVA_HOME}</jbosstools.test.jre.8>
		<!-- Default property for testInstallBase. It has to be empty for testInstallBase to work on non OSX systems. -->
		<testInstallPathOSX></testInstallPathOSX>
		<!-- default when building locally; see hudson profile for when building in Jenkins CI -->
		<p2StatsUrl>http://download.jboss.org/jbosstools/usage/installs/${project.groupId}-site/${project.version}/${BUILD_ALIAS}/${buildQualifier}</p2StatsUrl>
		<!-- see org.jboss.tools.releng:enforcer-rules below -->
		<enforceExcludePattern>BUILD_ALIAS|jbossTychoPluginsVersion|jbosstoolsRelengPublishVersion|parsedVersion.qualifier|parsedVersion.osgiVersion|TARGET_PLATFORM_VERSION|TARGET_PLATFORM_VERSION_MIN|TARGET_PLATFORM_VERSION_MAXIMUM|TARGET_PLATFORM_VERSION_MAX|JBTCENTRALTARGET_VERSION|TARGET_PLATFORM_CENTRAL_MAX|tpc.version|central.tpc.version|discovery.tpc.version|p2StatsUrl|angularjs.repo.url|targetplatform.url|jbosstools-target-site</enforceExcludePattern>
		<!-- more excludes; this lets individual projects add their own exclusions. Note, if using this, must start with a pipe (|) so these are appended as OR matches -->
		<enforceExcludePatternExtras></enforceExcludePatternExtras>
		<!-- set to true to cause build to fail for UI dependencies in a core plugin -->
		<enforceFailOnUIDependencyInCore>false</enforceFailOnUIDependencyInCore>
		<!-- 
			want to allow a dirty working tree in your Jenkins because your build generates files 
			that maven doesn't know it should ignore? set this property:
			  -DjgitDirtyWorkingTree=warning
			instead of error (default) -->
		<jgitDirtyWorkingTree>error</jgitDirtyWorkingTree>

		<!-- ======================== -->
		<!-- JBOSS TOOLS DEPENDENCIES -->
		<!-- ======================== -->

		<!--
			Don't use dashes & periods in variables which need to be used in shell (eg., Jenkins), as they cannot be declared.
			Use underscores or mixedCase instead! ref: http://unix.stackexchange.com/questions/23659/can-shell-variable-include-character
		-->
		<stream_jbt>master</stream_jbt> <!-- or 4.5.oxygen for example -->
		<jbosstools_site_stream>${stream_jbt}</jbosstools_site_stream> <!-- deprecated: do not use -->
		<jbosstools-build-type>${eclipseReleaseName}/snapshots/builds</jbosstools-build-type> <!-- path under which snapshot builds get published -->
		<jbosstools_site_baseurl>http://download.jboss.org/jbosstools/${jbosstools-build-type}</jbosstools_site_baseurl>
		<jbosstools_site_suffix>latest/all/repo</jbosstools_site_suffix> <!-- for a single build [stable branch], use latest/all/repo; for a composite of current builds [master branch], use "" -->
		<!-- Sites with mutable content (eg snapshot builds) -->
		<jbosstools-base-site>${jbosstools_site_baseurl}/jbosstools-base_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-base-site>
		<jbosstools-server-site>${jbosstools_site_baseurl}/jbosstools-server_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-server-site>
		<jbosstools-openshift-site>${jbosstools_site_baseurl}/jbosstools-openshift_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-openshift-site>
		<jbosstools-jst-site>${jbosstools_site_baseurl}/jbosstools-jst_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-jst-site>
		<jbosstools-aerogear-site>${jbosstools_site_baseurl}/jbosstools-aerogear_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-aerogear-site>
		<jbosstools-hibernate-site>${jbosstools_site_baseurl}/jbosstools-hibernate_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-hibernate-site>
		<jbosstools-javaee-site>${jbosstools_site_baseurl}/jbosstools-javaee_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-javaee-site>
		<jbosstools-webservices-site>${jbosstools_site_baseurl}/jbosstools-webservices_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-webservices-site>
		<jbosstools-vpe-site>${jbosstools_site_baseurl}/jbosstools-vpe_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-vpe-site>
		<jbosstools-arquillian-site>${jbosstools_site_baseurl}/jbosstools-arquillian_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-arquillian-site>
		<jbosstools-forge-site>${jbosstools_site_baseurl}/jbosstools-forge_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-forge-site>
		<jbosstools-livereload-site>${jbosstools_site_baseurl}/jbosstools-livereload_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-livereload-site>
		<jbosstools-central-site>${jbosstools_site_baseurl}/jbosstools-central_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-central-site>
		<jbosstools-browsersim-site>${jbosstools_site_baseurl}/jbosstools-browsersim_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-browsersim-site>
		<jbosstools-fuse-site>${jbosstools_site_baseurl}/jbosstools-fuse_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-fuse-site>
		<jbosstools-fuse-extras-site>${jbosstools_site_baseurl}/jbosstools-fuse-extras_${stream_jbt}/${jbosstools_site_suffix}</jbosstools-fuse-extras-site>
		<jbosstools-tests-site>http://download.jboss.org/jbosstools/${eclipseReleaseName}/snapshots/updates/coretests/${stream_jbt}/</jbosstools-tests-site>

		<!-- Static sites (should be moved into TP?) -->
		<!-- TODO: when changing these stable or integration URLs, be sure to ALSO change the URLs in download.jboss.org/jbosstools/builds/staging/_composite_/core/* or else composite builds will fail and no aggregates will happen in Jenkins! -->
		<jbosstools-xulrunner-site>http://download.jboss.org/jbosstools/updates/requirements/xulrunner-1.9.2/</jbosstools-xulrunner-site>
		<jbosstools-portlet-site>http://download.jboss.org/jbosstools/updates/stable/luna/core/portlet/</jbosstools-portlet-site>
		<jbosstools-freemarker-site>http://download.jboss.org/jbosstools/neon/stable/updates/core/freemarker/</jbosstools-freemarker-site>

		<!-- ================ -->
		<!-- TARGET-PLATFORMS -->
		<!-- ================ -->

		<!-- JBoss Tools target platforms are versioned: <eclipseMajor>.<eclipseMinorAndMicro>.<revision>.<qualifier>
				 Default version is the minimum API / Eclipse target used for the project -->
		<!-- current values for target platforms:
			 minimum (build / compilation) &
			 maximum (installation / running tests)

			 To build with the maximum TP instead of the default minimum one, use -Pmaximum

			 To build against locally built target platform, use -Dtpc.targetKind=multiple -Dtpc.version=4.70.2.Final
		-->
		<TARGET_PLATFORM_VERSION_MIN>4.70.3.AM3-SNAPSHOT</TARGET_PLATFORM_VERSION_MIN>
		<TARGET_PLATFORM_VERSION_MAX>4.71.0.AM3-SNAPSHOT</TARGET_PLATFORM_VERSION_MAX>
		<TARGET_PLATFORM_CENTRAL_MAX>4.71.0.AM3-SNAPSHOT</TARGET_PLATFORM_CENTRAL_MAX>

		<!-- deprecated variables -->
		<TARGET_PLATFORM_VERSION>${TARGET_PLATFORM_VERSION_MIN}</TARGET_PLATFORM_VERSION>
		<TARGET_PLATFORM_VERSION_MAXIMUM>${TARGET_PLATFORM_VERSION_MAX}</TARGET_PLATFORM_VERSION_MAXIMUM>

		<!-- This must be overriden when using other groups for TP, such as jbdevstudio; 
		however, as of devstudio 11, jbosstools and devstudio TPs are the same. See JBDS-4440 -->
		<targetPlatformGroup>jbosstools</targetPlatformGroup>

		<!-- ***************************************************************** -->
		<!-- Use *target* profiles to select other values for those properties -->
		<!-- ***************************************************************** -->
		<!-- tpc.groupId is static but defined here to use a completely different target platform (i.e. for JBTIS) -->
		<tpc.groupId>org.jboss.tools.targetplatforms</tpc.groupId>
		<!-- tpc.group is one of ${targetPlatformGroup} or ${targetPlatformGroup-maximun} -->
		<tpc.group>${targetPlatformGroup}</tpc.group>
		<!-- Is one of "unified" or "multiple" (other values "jenkins" & "local" are deprecated -->
		<tpc.targetKind>unified</tpc.targetKind>
		<tpc.version>${TARGET_PLATFORM_VERSION_MIN}</tpc.version>
		<!-- discovery.tpc.version usually is usually set to ${tpc.version} but it
		can happen that they need to have different values, hence 2 properties -->
		<discovery.tpc.version>${TARGET_PLATFORM_CENTRAL_MAX}</discovery.tpc.version>
		
		<sonar.maven.plugin.version>3.3.0.603</sonar.maven.plugin.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-packaging-plugin</artifactId>
				<version>${tychoVersion}</version>
				<configuration>
					<format>'v'yyyyMMdd-HHmm</format>
					<strictBinIncludes>false</strictBinIncludes>
					<timestampProvider>jgit</timestampProvider>
					<jgit.dirtyWorkingTree>warning</jgit.dirtyWorkingTree>
					<jgit.ignore>pom.xml
hs_err_pid*.log</jgit.ignore>
					<sourceReferences>
						<generate>true</generate>
					</sourceReferences>
					<archiveSite>true</archiveSite>
					<environments>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.eclipse.tycho.extras</groupId>
						<artifactId>tycho-sourceref-jgit</artifactId>
						<version>${tychoExtrasVersion}</version>
					</dependency>
					<dependency>
						<groupId>org.eclipse.tycho.extras</groupId>
						<artifactId>tycho-buildtimestamp-jgit</artifactId>
						<version>${tychoExtrasVersion}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tychoVersion}</version>
				<extensions>true</extensions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tychoVersion}</version>
				<configuration>
					<resolver>p2</resolver>
					<ignoreTychoRepositories>true</ignoreTychoRepositories>
					<environments>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>

			<!-- to skip running (and compiling) tests use commandline flag: -Dmaven.test.skip
				To skip tests, but still compile them, use: -DskipTests
				To allow all tests in a pom to pass/fail, use commandline flag: -fae (fail
				at end) -->
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-surefire-plugin</artifactId>
				<version>${tychoVersion}</version>
				<configuration>
					<useUIHarness>true</useUIHarness>
					<useUIThread>true</useUIThread>
					<!-- THE FOLLOWING LINE MUST NOT BE BROKEN BY AUTOFORMATTING -->
					<!-- tycho.testArgLine repeated to keep jacoco configuration for jacoco-maven-plugin -->
					<argLine>${tycho.testArgLine} ${memoryOptions1} ${memoryOptions2} ${applejdkProperties} ${platformSystemProperties} ${systemProperties} -Dusage_reporting_enabled=false -Dorg.jboss.tools.tests.skipPrivateRequirements=${skipPrivateRequirements} -Dorg.eclipse.ui.testsDisableWorkbenchAutoSave=true</argLine>
					<!-- https://docs.sonatype.org/display/TYCHO/How+to+run+SWTBot+tests+with+Tycho -->
					<!-- set useUIThread=true for regular ui tests -->
					<!-- set useUIThread=false for swtbot tests -->
					<includes>
						<include>**/AllTests.class</include>
						<include>**/*AllTests*.class</include>
						<include>**/*AllBotTests*.class</include>
						<include>**/*TestSuite*.class</include>
					</includes>
					<!-- Workaround for JBIDE-16161/Eclipse bug 424104 -->
					<dependencies>
						<dependency>
							<type>eclipse-feature</type>
							<artifactId>org.eclipse.e4.rcp</artifactId>
							<version>0.0.0</version>
						</dependency>
						<!-- This feature is required for correct Installed JRE initialization on Mac OS X -->
						<dependency>
							<type>eclipse-feature</type>
							<artifactId>org.eclipse.jdt</artifactId>
							<version>0.0.0</version>
						</dependency>
					</dependencies>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-compiler-plugin</artifactId>
				<version>${tychoVersion}</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- source for bundles -->
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-source-plugin</artifactId>
				<version>${tychoVersion}</version>
				<executions>
					<execution>
						<id>plugin-source</id>
						<goals>
							<goal>plugin-source</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<encoding>ISO-8859-1</encoding>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.7.1.201405082137</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<includes>
								<include>${coverage.filter}</include>
							</includes>
							<!-- Merge reports from all executions -->
							<append>true</append>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jboss.tools.tycho-plugins</groupId>
				<artifactId>repository-utils</artifactId>
				<version>${jbossTychoPluginsVersion}</version>
				<executions>
					<execution>
						<id>generate-facade</id>
						<phase>package</phase>
						<goals>
							<goal>generate-repository-facade</goal>
						</goals>
						<configuration>
							<symbols>
								<update.site.name>${update.site.name}</update.site.name>
								<update.site.description>${update.site.description}</update.site.description>
								<update.site.version>${project.version} (${buildQualifier})</update.site.version>
								<target.eclipse.version>${targetEclipseVersion}</target.eclipse.version>
							</symbols>
							<p2StatsUrl>${p2StatsUrl}</p2StatsUrl>
						</configuration>
					</execution>
					<!--<execution>
						<id>generate-full-site</id>
						<phase>package</phase>
						<goals>
							<goal>create-full-site</goal>
						</goals>
					</execution>-->
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>regex-property</id>
						<goals>
							<goal>regex-property</goal>
						</goals>
						<configuration>
							<name>skipTestsOrITests</name>
							<value>${skipTests}${skipITests}</value>
							<regex>((..skipTests.)?(true)?((..skipITests.)|(null)|(true)|(false))?)</regex>
							<replacement>$3</replacement>
							<failIfNoMatch>false</failIfNoMatch>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho.extras</groupId>
				<artifactId>tycho-p2-extras-plugin</artifactId>
				<version>${tychoVersion}</version>
				<executions>
					<execution>
						<goals>
							<goal>compare-version-with-baselines</goal>
						</goals>
						<phase>verify</phase>
						<configuration>
							<skip>${skipBaselineComparison}</skip>
							<baselines>
								<repo>${lastStableRepository}</repo>
							</baselines>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- to disable all enforcer checks, build with -Denforcer.skip=true -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.4.1</version>
				<dependencies>
					<dependency>
						<groupId>org.jboss.tools.releng</groupId>
						<artifactId>enforcer-rules</artifactId>
						<version>${jbossTychoPluginsVersion}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>core-has-ui-deps</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<coreUIDependency implementation="org.jboss.tools.releng.CoreUIDependency"/>
							</rules>
							<!-- warn but continue the build when fail = false -->
							<fail>${enforceFailOnUIDependencyInCore}</fail>
						</configuration>
					</execution>
					<execution>
						<id>warn-no-snapshots-AMx</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<noSnapshotsAllowed implementation="org.jboss.tools.releng.NoSnapshotsAllowed">
									<buildAlias>${BUILD_ALIAS}</buildAlias>
									<!-- if AM3, warn if SNAPSHOTs present -->
									<buildAliasSearch>AM1|AM2|AM3</buildAliasSearch>
									<!-- properties to include when searching for SNAPSHOT versions, eg., .* (all),
										openshift-restclient-java.version (openshift), angularjs.repo.url (jst), thym.version (aerogear)
									 -->
									<includePattern>.*</includePattern>
									<!-- properties to exclude when searching for SNAPSHOT versions -->
									<excludePattern>${enforceExcludePattern}${enforceExcludePatternExtras}</excludePattern>
								</noSnapshotsAllowed>
							</rules>
							<!-- warn but continue the build when fail = false -->
							<fail>false</fail>
						</configuration>
					</execution>
					<execution>
						<id>enforce-no-snapshots-Final</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<noSnapshotsAllowed implementation="org.jboss.tools.releng.NoSnapshotsAllowed">
									<buildAlias>${BUILD_ALIAS}</buildAlias>
									<!-- if Final or GA, fail build if SNAPSHOTs present -->
									<buildAliasSearch>Final|GA</buildAliasSearch>
									<!-- properties to include when searching for SNAPSHOT versions -->
									<includePattern>.*</includePattern>
									<!-- properties to exclude when searching for SNAPSHOT versions -->
									<excludePattern>${enforceExcludePattern}${enforceExcludePatternExtras}</excludePattern>
								</noSnapshotsAllowed>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.7</version>
				<extensions>true</extensions>
				<configuration>
					<!-- The Base URL of Nexus instance where we want to stage -->
					<nexusUrl>https://${jbossNexus}/nexus/</nexusUrl>
					<!-- The server "id" element from settings to use authentication from -->
					<serverId>jboss-releases-repository</serverId>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!-- This plugin's configuration is used to store Eclipse m2e settings only. -->
				<!-- It has no influence on the Maven build itself. -->
				<!-- Workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=350414 -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>[0.5,)
										</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<!-- m2e doesn't know what to do with jacoco, -->
										<!-- let's ignore it or annoying error markers appear -->
										<!-- see http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>regex-property</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.5.4</version>
					<executions>
						<execution>
							<id>create-zip</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
							<configuration>
								<appendAssemblyId>false</appendAssemblyId>
								<!-- JBIDE-19800 to use this, must specify path to an assembly.xml file. Examples in jbosstools-discovery and jbosstools-target-platforms
								<descriptors><descriptor>publish-assembly.xml</descriptor></descriptors>
								-->
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>net.ju-n.maven.plugins</groupId>
					<artifactId>checksum-maven-plugin</artifactId>
					<version>1.2</version>
					<executions>
						<execution>
							<goals>
								<goal>files</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<quiet>true</quiet>
						<csvSummary>false</csvSummary>
						<algorithms>
							<algorithm>SHA-256</algorithm>
						</algorithms>
						<fileSets>
							<fileSet>
								<directory>${project.build.directory}</directory>
								<includes>
									<include>**/*.zip</include>
									<include>**/*-installer-*.jar</include>
								</includes>
							</fileSet>
						</fileSets>
					</configuration>
				</plugin>

				<plugin>
					<groupId>com.googlecode.maven-download-plugin</groupId>
					<artifactId>maven-download-plugin</artifactId>
					<version>1.1.0</version>
					<configuration>
						<skip>${skipRequirements}</skip>
						<outputDirectory>${requirementsDirectory}</outputDirectory>
					</configuration>
				</plugin>

				<plugin>
					<groupId>com.googlecode.maven-download-plugin</groupId>
					<artifactId>download-maven-plugin</artifactId>
					<version>1.2.0</version>
					<configuration>
						<skip>${skipRequirements}</skip>
						<outputDirectory>${requirementsDirectory}</outputDirectory>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<skip>${skipRequirements}</skip>
						<outputDirectory>${requirementsDirectory}</outputDirectory>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.eclipse.tycho.extras</groupId>
					<artifactId>tycho-source-feature-plugin</artifactId>
					<version>${tychoExtrasVersion}</version>
					<executions>
						<execution>
							<id>source-feature</id>
							<phase>package</phase>
							<goals>
								<goal>source-feature</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- JBIDE-22689 to skip this check, use -Dtycho.baseline=disable, NOT -DskipBaselineComparison=true -->
				<plugin>
					<groupId>org.eclipse.tycho</groupId>
					<artifactId>tycho-p2-plugin</artifactId>
					<version>${tychoVersion}</version>
					<executions>
						<execution>
							<id>attached-p2-metadata</id>
							<phase>package</phase>
							<goals>
								<goal>p2-metadata</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<baselineRepositories>
							<repository>
								<url>${stagingBaselineRepository}</url>
							</repository>
						</baselineRepositories>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.6.1</version>
				</plugin>
				
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.maven.plugin.version}</version>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<!-- ************************************************************ -->
		<!-- Profiles to manage target-platform and 3rd pary dependencies -->
		<!-- ************************************************************ -->

		<!-- enable actual using a target platform, can simply be disable with -Dno-target-platform -->
		<profile>
			<id>target-platform</id>
			<activation>
				<property>
					<name>!no-target-platform</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>target-platform-configuration</artifactId>
						<version>${tychoVersion}</version>
						<configuration>
							<target>
								<artifact>
									<groupId>${tpc.groupId}</groupId>
									<artifactId>${tpc.group}-${tpc.targetKind}</artifactId>
									<version>${tpc.version}</version>
									<classifier>${tpc.group}-${tpc.targetKind}</classifier>
								</artifact>
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Target platform file pointing at the composite target platform
			AKA multiple.target -->
		<profile>
			<id>multiple.target</id>
			<properties>
				<tpc.targetKind>multiple</tpc.targetKind>
			</properties>
		</profile>
		<!-- Target platform file pointing at a single update site from which to
			resolve. See unified.site if you want to resolve against a site w/o using
			the unified.target file -->
		<profile>
			<id>unified.target</id>
			<properties>
				<tpc.targetKind>unified</tpc.targetKind>
			</properties>
		</profile>

		<profile>
			<id>maximum</id>
			<properties>
				<tpc.version>${TARGET_PLATFORM_VERSION_MAX}</tpc.version>
			</properties>
		</profile>


		<profile>
			<!-- JBIDE-12455 , necessary because of XulRunner doesn't support 64bits OSX -->
			<id>applejdk</id>
			<activation>
				<property>
					<name>java.vendor.url</name>
					<value>http://www.apple.com/</value>
				</property>
			</activation>
			<properties>
				<applejdkProperties> -d32 -Dosgi.arch=x86 </applejdkProperties>
			</properties>
		</profile>

		<profile>
			<!-- Workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=388084 -->
			<id>osx</id>
			<activation>
				<os>
					<family>mac</family>
				</os>
			</activation>
			<properties>
				<!-- THE FOLLOWING LINE MUST NOT BE BROKEN BY AUTOFORMATTING -->
				<platformSystemProperties> -XstartOnFirstThread </platformSystemProperties>
				<!-- devstudio install path on OSX -->
				<testInstallPathOSX>/devstudio.app/Contents/Eclipse/</testInstallPathOSX>
			</properties>
		</profile>

		<profile>
			<id>hudson</id>
			<activation>
				<property>
					<name>BUILD_NUMBER</name>
				</property>
			</activation>
			<properties>
				<!-- to test p2StatsUrl, must pass in two vars: mvn clean install -DJOB_NAME=jbosstools-server_master -DBUILD_NUMBER=450002 -->
				<p2StatsUrl>http://download.jboss.org/jbosstools/usage/installs/${JOB_NAME}/${project.version}/${BUILD_ALIAS}/${buildQualifier}/</p2StatsUrl>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-packaging-plugin</artifactId>
						<version>${tychoVersion}</version>
						<configuration>
							<jgit.dirtyWorkingTree>${jgitDirtyWorkingTree}</jgit.dirtyWorkingTree>
							<format>'v'yyyyMMdd-HHmm</format>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>sign</id>
			<!--	guarantee that -Psign <=> -DskipSigning=false -->
			<activation>
				<property>
					<name>skipSigning</name>
					<value>false</value>
				</property>
			</activation>
			<properties>
				<skipSigning>false</skipSigning>
			</properties>
		</profile>

		<profile>
			<id>pack200</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>target-platform-configuration</artifactId>
						<version>${tychoVersion}</version>
						<configuration>
							<includePackedArtifacts>true</includePackedArtifacts>
						</configuration>
					</plugin>
					<!-- first we normalize -->
					<plugin>
						<groupId>org.eclipse.tycho.extras</groupId>
						<artifactId>tycho-pack200a-plugin</artifactId>
						<version>${tychoExtrasVersion}</version>
						<executions>
							<execution>
								<id>pack200-normalize</id>
								<goals>
									<goal>normalize</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<!-- then we sign -->
					<plugin>
						<artifactId>exec-maven-plugin</artifactId>
						<groupId>org.codehaus.mojo</groupId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<id>jarsign</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>/home/hudson/bin/jarsign.sh</executable>
									<arguments>
										<argument>${project.basedir}</argument>
									</arguments>
									<skip>${skipSigning}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- then we pack -->
					<plugin>
						<groupId>org.eclipse.tycho.extras</groupId>
						<artifactId>tycho-pack200b-plugin</artifactId>
						<version>${tychoExtrasVersion}</version>
						<executions>
							<execution>
								<id>pack200-pack</id>
								<goals>
									<goal>pack</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-p2-plugin</artifactId>
						<version>${tychoVersion}</version>
						<executions>
							<execution>
								<id>p2-metadata</id>
								<goals>
									<goal>p2-metadata</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
						<configuration>
							<defaultP2Metadata>false</defaultP2Metadata>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>deploy-to-jboss.org</id>
			<activation>
				<property>
					<name>skipDeployToJBossOrg</name>
					<value>false</value>
				</property>
			</activation>
			<properties>
				<deployScriptDir>${project.build.directory}/releng-scripts</deployScriptDir>
				<deployScript>${deployScriptDir}/publish/rsync.sh</deployScript>
				<deploySourceFolder>${project.build.directory}/repository</deploySourceFolder>
				<deployDestination>tools@${filemgmtJbossOrg}:downloads_htdocs/jbosstools</deployDestination>
				<deployTargetFolder>${jbosstools-build-type}/${JOB_NAME}/${BUILD_TIMESTAMP}-B${BUILD_NUMBER}/all/repo/</deployTargetFolder>
				<deployNumbuildstokeep>2</deployNumbuildstokeep>
				<deployNumbuildstolink>2</deployNumbuildstolink>
				<deployThreshholdwhendelete>2</deployThreshholdwhendelete>
				<!-- https://issues.jboss.org/browse/JBIDE-21012 by default, don't push an update site zip to JBoss Nexus, only to download.jboss.org or devstudio.redhat.com -->
				<maven.deploy.skip>true</maven.deploy.skip>
				<skipNexusStagingDeployMojo>true</skipNexusStagingDeployMojo>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>deploy-releng-scripts</id>
								<goals>
									<goal>unpack</goal>
								</goals>
								<phase>deploy</phase>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>org.jboss.tools.releng</groupId>
											<artifactId>jbosstools-releng-publish</artifactId>
											<version>${jbosstoolsRelengPublishVersion}</version>
											<type>tar.gz</type>
											<outputDirectory>${deployScriptDir}</outputDirectory>
										</artifactItem>
									</artifactItems>
									<skip>${skipDeployToJBossOrg}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.3.2</version>
						<configuration>
							<executable>${deployScript}</executable>
						</configuration>
						<executions>
							<execution>
								<id>deploy-snapshot-build</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>deploy</phase>
								<configuration>
									<arguments>
										<arg>-DESTINATION</arg>
										<arg>${deployDestination}</arg>
										<arg>-s</arg>
										<arg>${deploySourceFolder}</arg>
										<arg>-t</arg>
										<arg>${deployTargetFolder}</arg>
										<arg>-k</arg>
										<arg>${deployNumbuildstokeep}</arg>
										<arg>-l</arg>
										<arg>${deployNumbuildstolink}</arg>
										<arg>-a</arg>
										<arg>${deployThreshholdwhendelete}</arg>
									</arguments>
									<skip>${skipDeployToJBossOrg}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Multiple triggers to disable tests that depends on private requirements
			These profiles are workaround for Maven to support minimal operations
			http://jira.codehaus.org/browse/MNG-5347 -->
		<profile>
			<id>mavenTestSkip</id>
			<activation>
				<property>
					<name>maven.test.skip</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<maven.test.skip>true</maven.test.skip>
				<skipTestsWithPrivateRequirements>true</skipTestsWithPrivateRequirements>
			</properties>
		</profile>

		<!-- JBIDE-23206
			 To force a local build of a pull request to use current date/time when generating plugins and features,
			 instead of using jgit timestamps (which could be in the past, and therefore result in stuff that Eclipse
			 thinks is OLDER that a current N build, use this "R" profile:
			 mvn verify -PR
		-->
		<profile>
			<id>R</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-packaging-plugin</artifactId>
						<version>${tychoVersion}</version>
						<configuration>
							<timestampProvider>default</timestampProvider>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- ITests profile #1 of 3: won't run if -DskipITests=true -->
		<profile>
			<id>ITests</id>
			<activation>
				<property>
					<name>skipITests</name>
					<value>false</value>
				</property>
			</activation>
			<properties>
				<skipITests>false</skipITests>
				<surefire.timeout>7200</surefire.timeout>
				<tpc.version>${TARGET_PLATFORM_VERSION_MAX}</tpc.version>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.googlecode.maven-download-plugin</groupId>
						<artifactId>download-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>download-pluginCustomization</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>wget</goal>
								</goals>
								<configuration>
									<url>https://raw.githubusercontent.com/jbosstools/jbosstools-build/master/itests/pluginCustomization.ini</url>
									<unpack>false</unpack>
									<outputDirectory>${requirementsDirectory}</outputDirectory>
									<md5>db44a474b1380353c7f48846c8527c25</md5>
									<skip>${skipITests}</skip>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-surefire-plugin</artifactId>
						<configuration>
							<!--  useUIThread=false needs to be set in itests/pom.xml -->
							<systemProperties>
								<org.eclipse.update.reconcile>false</org.eclipse.update.reconcile>
							</systemProperties>
							<explodedBundles>
								<bundle>org.mozilla.xulrunner.cocoa.macosx</bundle>
								<bundle>org.mozilla.xulrunner.gtk.linux.x86</bundle>
								<bundle>org.mozilla.xulrunner.gtk.linux.x86_64</bundle>
								<bundle>org.mozilla.xulrunner.win32.win32.x86</bundle>
							</explodedBundles>
							<skip>${skipITests}</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<repositories>
				<repository>
					<id>jbosstools-tests</id>
					<url>${jbosstools-tests-site}</url>
					<layout>p2</layout>
				</repository>
			</repositories>
		</profile>

		<!-- ITests profile #2 of 3: won't run if -DskipITests=true -->
		<profile>
			<id>preinstalled-devstudio</id>
			<activation>
				<property>
					<name>testInstallBase</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-surefire-plugin</artifactId>
						<configuration>
							<skip>${skipITests}</skip>
							<work>${testInstallBase}${testInstallPathOSX}</work>
							<product>${testProduct}</product>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- ITests profile #3 of 3: won't run if -DskipITests=true -->
		<profile>
			<id>download-devstudio</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>tycho-surefire-plugin</artifactId>
						<configuration>
							<skip>${skipITests}</skip>
							<product>${testProduct}</product>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.eclipse.tycho</groupId>
						<artifactId>target-platform-configuration</artifactId>
						<configuration>
							<skip>${skipITests}</skip>
							<dependency-resolution>
		 						<extraRequirements>
									<requirement>
										<type>p2-installable-unit</type>
										<id>com.jboss.devstudio.core.feature.feature.group</id>
										<versionRange>0.0.0</versionRange>
									</requirement>
		 						</extraRequirements>
							</dependency-resolution>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<repositories>
				<repository>
					<id>devstudio-repo</id>
					<name>devstudio-repo</name>
					<layout>p2</layout>
					<url>${devstudioRepository}</url>
				</repository>
			</repositories>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>jboss-releases</id>
			<name>JBoss Releases Maven Repository</name>
			<url>https://${jbossNexus}/nexus/content/repositories/releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>jboss-snapshots-repository</id>
			<name>JBoss Snapshots Repository</name>
			<url>https://${jbossNexus}/nexus/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>jboss-ga-repository</id>
			<name>JBoss General Availability Maven Repository</name>
			<url>http://maven.repository.redhat.com/ga/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
	</repositories>

	<!-- Additional m2 repos to resolve things like org.eclipse.tycho:tycho-maven-plugin -->
	<!-- JBoss Nexus repos are also added, but in settings.xml -->
	<pluginRepositories>
		<pluginRepository>
			<id>tycho-snapshots</id>
			<url>https://repo.eclipse.org/content/repositories/tycho-snapshots/</url>
		</pluginRepository>
		<pluginRepository>
			<id>sonatype-public-grid</id>
			<url>https://repository.sonatype.org/content/groups/sonatype-public-grid</url>
		</pluginRepository>
		<pluginRepository>
			<id>sonatype-public-repository</id>
			<url>https://oss.sonatype.org/content/groups/public</url>
		</pluginRepository>
		<pluginRepository>
			<id>jboss-snapshots-repository</id>
			<name>JBoss Snapshots Repository</name>
			<url>https://${jbossNexus}/nexus/content/repositories/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>jboss-releases</id>
			<name>JBoss Releases Maven Repository</name>
			<url>https://${jbossNexus}/nexus/content/repositories/releases/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<!-- To deploy parent to Nexus -->
	<!--	Don't change "id" since it should match credentials entry in $M2_REPO/settings.xml -->
	<distributionManagement>
		<snapshotRepository>
			<id>jboss-snapshots-repository</id>
			<name>JBoss Snapshots Repository</name>
			<url>https://${jbossNexus}/nexus/content/repositories/snapshots/</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>
		<repository>
			<id>jboss-releases-repository</id>
			<name>JBoss Release Staging Repository</name>
			<uniqueVersion>false</uniqueVersion>
			<url>https://${jbossNexus}/nexus/service/local/staging/deploy/maven2/</url>
			<layout>default</layout>
		</repository>
	</distributionManagement>

	<scm>
		<connection>scm:git:git://git@github.com:jbosstools/jbosstools-build.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:jbosstools/jbosstools-build.git</developerConnection>
		<url>git://github.com/jbosstools/jbosstools-build.git</url>
	</scm>

	<issueManagement>
		<system>jira</system>
		<url>https://jira.jboss.org/jira/secure/</url>
	</issueManagement>

	<licenses>
		<license>
			<name>Eclipse Public License</name>
			<url>http://www.eclipse.org/legal/epl-v10.html</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>tools.jboss.org</id>
			<name>JBoss Tools</name>
			<organization>jboss.org/tools</organization>
			<organizationUrl>http://jboss.org/tools</organizationUrl>
		</developer>
	</developers>

</project>
